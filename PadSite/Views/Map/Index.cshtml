@{
    ViewBag.Title = ConfigSetting.SiteName + "媒体地图搜索";
    Layout = "~/Views/Shared/_LayoutMap.cshtml";
    var categoryList = (List<SelectListItem>)ViewBag.categoryList;
    var priceList = (List<SelectListItem>)ViewBag.priceList;
    
}
@section topscripts{
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=8E9B4Db1D0648facf0f8d3f3a2092ae8"></script>
}
<div class="m-container">
    <div class="m-header">
        <div class="m-header-container">
            <div class="m-logo">
                <a href="/" title="">@ConfigSetting.SiteName</a>
            </div>
            <div class="m-search">
                <input class="search-text search-text-gray" id="search-text" type="text" value="请输入搜索的具体位置" x-webkit-speech="">
                <input class="search-button" id="search-button" type="button" value="搜索">
                <ul class="top-head-suggest" style="display: none;"></ul>
            </div>
            <div class="m-header-filter">
                <div class="list-dropdown" id="list-dropdown-parent">
                    <span class="list-dropdown-title">@categoryList.Single(x => x.Selected.Equals(true)).Text</span>
                    <i class="icon-maitonn icon-caret-down"></i>
                    <ul class="list-dropdown-list">
                        @foreach (var item in categoryList)
                        {
                            <li><a class="@(item.Selected ? "selected" : "")" data-id="@item.Value">@item.Text</a></li>
                        }
                    </ul>
                    <input type="hidden" id="mediaCode" value="@categoryList.Single(x => x.Selected.Equals(true)).Value" />
                </div>
                <div class="list-dropdown" id="list-dropdown-price">
                    <span class="list-dropdown-title">@priceList.Single(x => x.Selected.Equals(true)).Text</span>
                    <i class="icon-maitonn icon-caret-down"></i>
                    <ul class="list-dropdown-list">
                        @foreach (var item in priceList)
                        {
                            <li><a class="@(item.Selected ? "selected" : "")" data-id="@item.Value">@item.Text</a></li>
                        }
                    </ul>
                    <input type="hidden" id="priceCode" value="@priceList.Single(x => x.Selected.Equals(true)).Value" />
                </div>

            </div>
        </div>
    </div>
    <div class="m-content">
        <div class="m-left">
            <div class="m-filter">
                <span>筛选条件：<span id="m-filter-condition">媒体类型不限，价格不限</span></span>
                @*  <a href="javascript:void(0)" class="m-filter-btn">更改</a>*@
            </div>
            <div class="m-list gray-list">
            </div>
        </div>
        <div class="m-control" id="m-control"></div>
    </div>
    <div class="gary-loadding m-loadding">
        <img src="@Url.Content("~/Content/images/min-loading.gif")" />
    </div>
</div>

@(Html.Kendo().Window().Name("Win-mapvideo")
    .Title("路段视频")
    .Visible(false)
    .Modal(true)
    .Draggable(false)
    .Width(510)
    .Height(430)
    .Scrollable(true)

    )

@section scripts{
    <script type="text/javascript">
        var MapSearch = {
            init: function () {
                var self = this,
                    videowindow = $('#Win-mapvideo').data('kendoWindow');
                self.map = new BMap.Map("m-control");            // 创建Map实例
                self.map.centerAndZoom("@UIHelper.GetCityName()", 15);
                self.map.addControl(new BMap.NavigationControl());               // 添加平移缩放控件
                self.map.addControl(new BMap.ScaleControl());                    // 添加比例尺控件
                self.map.addControl(new BMap.OverviewMapControl());
                self.map.enableScrollWheelZoom();
                self.localSearch = new BMap.LocalSearch(self.map, self.searchOptions),
                self.map.addEventListener("dblclick", function () {
                    self.searchArea();
                });
                self.map.addEventListener("rightdblclick", function () {
                    self.searchArea();
                });
                self.map.addEventListener("zoomend", function () {
                    self.searchArea();
                });
                self.map.addEventListener("dragend", function () {
                    self.searchArea();
                });

                $('#search-button').on('click', $.proxy(self.searchKeywords, self));

                $('#search-text').on('focus', self.keywordsSet)

                $('#search-text').on('focusout', self.keywordsFocusOut)

                $('#search-text').on('keydown', self.keywordsSet)

                self.initSelectCategory();
            },

            initSelectCategory: function () {

                var self = this;

                $('.list-dropdown').hover(function () {
                    if (!$(this).hasClass('disabled')) {
                        $(this).children("ul").show();
                    }
                }, function () {
                    if (!$(this).hasClass('disabled')) {
                        $(this).children("ul").hide();
                    }
                })

                $('.list-dropdown').on('click', 'a', function (e) {
                    var target = $(e.currentTarget),
                        container = target.parents('.list-dropdown'),
                        dataid = target.data('id'),
                        title = target.html(),
                        list = container.children('ul'),
                        input = container.find('input[type="hidden"]'),
                        listtile = container.find('.list-dropdown-title'),
                        containerId = container.attr('id');
                    container.find('a').removeClass('selected');
                    target.addClass('selected');
                    input.val(dataid);
                    listtile.html(title);
                    list.hide();
                    self.updateFilter();
                    self.searchArea();
                })

            },

            updateFilter: function () {

                var self = this,

                    condition = '',

                    filter = $('#m-filter-condition'),

                    category = $('#list-dropdown-parent'),

                    price = $('#list-dropdown-price');

                if (category.find('input[type="hidden"]').val() != 0) {

                    condition += '媒体类型 ' + category.find('.list-dropdown-title').html();
                }
                else {
                    condition = '媒体类型不限'
                }
                condition += '，';

                if (price.find('input[type="hidden"]').val() != 0) {

                    condition += '价格 ' + price.find('.list-dropdown-title').html();
                } else {
                    condition += '价格不限'
                }

                filter.html(condition);

            },

            showVideo: function (obj) {

                var videowindow = $('#Win-mapvideo').data('kendoWindow');

                var target = $(obj);

                var title = target.data('title');

                var url = target.data('url');

                var videoUrl = '<embed src="' + url + '"  allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash"></embed>';

                videowindow.content(videoUrl);

                videowindow.open().center();

                videowindow.title(title + '-路段视频');

            },



            keywordsSet: function (e) {
                var target = $(e.currentTarget);
                if (target.val() === '请输入搜索的具体位置') {
                    target.val('');
                    target.removeClass('search-text-gray')
                }
                if (e.keyCode && e.keyCode === 13) {
                    $("#search-button").click();
                    return false;
                } else {
                    if ($(target).val().length > 20) {
                        return false;
                    }
                }

            },

            keywordsFocusOut: function (e) {
                var target = $(e.currentTarget);
                if (target.val() === '') {
                    target.val('请输入搜索的具体位置')
                    target.addClass('search-text-gray')
                }
            },

            searchKeywords: function () {
                var self = this;
                var keywordInput = $('#search-text');
                var keywords = keywordInput.val();
                if (keywords === '') {
                    keywordInput.val('请输入搜索的具体位置')
                    keywordInput.addClass('search-text-gray')
                    return false;
                } else if (keywords === '请输入搜索的具体位置') {
                    keywordInput.focus();
                    return false;

                } else {

                    self.localSearch.search(keywords);
                }

            },

            searchOptions: {
                onSearchComplete: function (results) {
                    var self = MapSearch;
                    if (self.localSearch.getStatus() == BMAP_STATUS_SUCCESS) {
                        var s = [];
                        self.map.clearOverlays();
                        for (var i = 0; i < results.getCurrentNumPois() ; i++) {
                            if (i == 0) {
                                self.map.setCenter(results.getPoi(i).point);
                                break;
                            }
                        }
                        self.searchArea();
                    }
                    else {
                        alert('没有搜索到该地！');
                    }
                }
            },
            pageSearchArea: function (e) {

                var self = this,

                    target = $(e.currentTarget),

                    page = parseInt(target.data('page'), 10);

                self.searchArea(page);
            },

            searchArea: function (page) {
                var self = this,
                    mediaCode = $('#mediaCode').val(),
                    priceCode = $('#priceCode').val(),
                    areas = self.getSearchArea();
                if (page) {
                    areas.page = page;
                }
                areas.category = parseInt(mediaCode, 10);
                areas.price = parseInt(priceCode, 10);
                self.showBusy();
                self.getSearchResult(areas).done(function (data) {
                    self.renderList(data);
                    self.renderMarker(data);
                    self.renderPage(data);
                })
            },

            showBusy: function () {
                $('.m-list').empty();
                var loading = $('.gary-loadding').clone();
                $('.m-list').append(loading);
                loading.show();
            },

            getSearchResult: function (opts) {
                var d = $.Deferred();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("getsearcharea", "ajaxcontent")",
                    data: opts,
                    success: function (res) {
                        d.resolve(res);
                    }
                });
                return d.promise();
            },

            getSearchArea: function () {
                var self = this,
                    bs = self.map.getBounds();
                return {
                    minX: bs.Sh.lat,
                    minY: bs.Sh.lng,
                    maxX: bs.Jh.lat,
                    maxY: bs.Jh.lng
                };
            },
            renderList: function (data) {
                var html = '<div class="list-num">右侧地图中找到户外信息<strong id="prop-found">' + data.TotalCount + '</strong>条</div>' + '<ul>',
                    showUrl = 'media',

                    items = data.Items;
                for (var i = 0; i < items.length; i++) {
                    var item = items[i];
                    var itemHtml = '<li class="clearfix m-list-item"  data-id="' + item.ID + '" >'
                         + '<a href="' + showUrl + '-' + item.ID + '" target="_blank" >'
                         + '    <img src="' + item.FocusImgUrl + '" alt="' + item.Name + '" /></a>'
                         + '<p class="item-desc">'
                         + '    <a target="_blank" title="' + item.Name + '" href="' + showUrl + '-' + item.ID + '">' + item.Name + '</a>'
                         + '</p>'
                         + '<p class="item-category" >' + item.CityCateName.replace(',', ' - ') + '</p>';

                    if (item.Price == 99999) {
                        itemHtml += '<p class="item-price fg-color-red"><strong>面议</strong></p>';
                    } else {
                        itemHtml += '<p class="item-price fg-color-red"><strong>¥' + item.Price + '</strong> 万元/年</p>';
                    }
                    html += itemHtml;
                }
                html += '</ul>';

                $('.m-list').html(html);

                $('.m-list-item').on('mouseenter', function () {
                    $(this).addClass('m-list-item-hover');
                    var Infowindow = $(this).data('window');
                    var marker = $(this).data('marker');
                    marker.openInfoWindow(Infowindow);
                }).on('mouseleave', function () {
                    $(this).removeClass('m-list-item-hover');
                    var marker = $(this).data('marker');
                    marker.closeInfoWindow();
                })
            },

            renderPage: function (data) {

                var self = this,
                    container = $('<div/>').addClass('list-page-split'),
                    leftqujian = false,
                    rightqujian = false,
                    totalPages = Math.ceil(data.TotalCount / data.PageSize),
                    prepage,
                    nextpage;

                data.TotalPages = totalPages;

                if (data.TotalCount == 0) {
                    return;
                }

                if (data.CurrentPage == 1) {
                    prepage = $('<span/>');
                } else {
                    prepage = $('<a/>').attr('data-page', data.CurrentPage - 1);
                }
                prepage.addClass('prev');
                prepage.html('<i></i>上一页');
                container.append(prepage);

                for (var i = 1; i <= data.TotalPages; i++) {
                    if (data.CurrentPage - i >= 2 && i > 1) {
                        if (!leftqujian) {
                            var dotted = $('<span/>').html('...').addClass('dotted');
                            container.append(dotted);
                            leftqujian = true;
                        }
                    }
                    else if (i - data.CurrentPage >= 2 && i < data.TotalPages) {
                        if (!rightqujian) {
                            var dotted = $('<span/>').html('...').addClass('dotted');
                            container.append(dotted);
                            rightqujian = true;
                        }
                    }
                    else {
                        if (i == data.CurrentPage) {
                            var currentPagebtn = $('<span/>').html(i).addClass('dotted');
                            container.append(currentPagebtn);
                        }
                        else {
                            var tag = $('<a/>').html(i).attr('data-page', i);
                            container.append(tag);
                        }
                    }
                }

                if (data.CurrentPage == data.TotalPages) {
                    nextpage = $('<span/>');
                }
                else {
                    nextpage = $('<a/>').attr('data-page', data.CurrentPage + 1);
                }

                nextpage.addClass('next');

                nextpage.html('<i></i>下一页');

                container.append(nextpage);

                $('.m-list').append(container);

                $('.list-page-split').on('click', 'a', $.proxy(self.pageSearchArea, self))
            },

            renderMarker: function (data) {
                var self = this,
                    items = data.Items;
                self.map.clearOverlays();
                for (var i = 0; i < items.length; i++) {
                    var item = items[i];
                    self.addMarker(item);
                }
            },



            addMarker: function (item) {

                var self = this;

                var iconUrl = '@Url.Content("~/Content/images/mapmarker.png")';

                var myIcon = new BMap.Icon(iconUrl, new BMap.Size(29, 35), {

                    offset: new BMap.Size(10, 15),

                    imageOffset: new BMap.Size(0, -209)

                });

                var point = new BMap.Point(item.Lng, item.Lat);

                var marker = new BMap.Marker(point, { icon: myIcon });

                self.map.addOverlay(marker);

                marker.enableDragging();

                var infoOpts = {

                };

                infoOpts.title = "<a target='_blank' data-windowId='" + item.ID + "' href='media-" + item.ID + "' style='margin-left:3px;' >" + item.Name + "</a>";

                var imgurl = "<a target='_blank' href='media-" + item.ID + "'  style=' margin-top:5px;' ><img src='" + item.FocusImgUrl + "' style='width:100%;' /></a><div style=' margin-top:5px;text-align:right;'>价格:<strong class='c_red'>" + item.Price + "</strong> 万元/年 </div>";


                var content = '<div style="margin:0;line-height:20px;padding:2px;width:350px; color:gray;">' +

                    '<img src="' + item.FocusImgUrl + '" alt="" style="float:right;zoom:1;overflow:hidden;width:100px;height:100px;margin-left:3px;"/>' +

                    '公司：<a target="_blank" href="company/index/' + item.MemberID + '">' + item.CompanyName + '</a><br/>媒体描述：' + (item.Description.length > 50 ? item.Description.substr(0, 50) + '...' : item.Description) + '<br/>' +

                    '价格：<strong class="fg-color-red">' + item.Price + '</strong> 万元/年  <br/>';

                if (item.VideoUrl !== '') {

                    content += '路段视频：<a class="m-view-video c_red" data-url="' + item.VideoUrl + '" data-title="' + item.Name + '" style="cursor:pointer" onclick="MapSearch.showVideo(this);">路段视频</a>';
                }

                content += '</div>';

                var infoWindow = new BMap.InfoWindow(content, infoOpts);  // 创建信息窗口对象   

                var li = $('[data-id="' + item.ID + '"]');

                li.data('window', infoWindow);

                li.data('marker', marker);

                marker.addEventListener("mouseover", function () {

                    this.openInfoWindow(infoWindow);      // 打开信息窗口 

                })

                return marker;
            }
        }

        $(function () {
            MapSearch.init();
        })

    </script>

}