@{
    ViewBag.Title = "会员信息管理";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@(Html.Kendo().Grid<Member>()
    .Name("MembersList")
    .Columns(columns =>
    {
        columns.Bound(c => c.MemberID).Width(60);
        columns.Bound(c => c.Email).Width(180);
        columns.Bound(c => c.NickName).Width(80);
        columns.Bound(c => c.Mobile).Width(120);
        columns.ForeignKey(p => p.MemberType, new SelectList((List<SelectListItem>)ViewBag.MemberType, "value", "text")).Width(80);
        columns.Bound(c => c.AddIP).Width(80);
        columns.Bound(c => c.AddTime).Format("{0:yyyy.MM.dd hh:mm:ss}");
        columns.Bound(c => c.LastIP).Width(80);
        columns.Bound(c => c.LastTime).Format("{0:yyyy.MM.dd hh:mm:ss}");
        columns.Bound(c => c.LoginCount).Width(60);
        columns.Template(@<text></text>)
.ClientTemplate(@"<a class='k-button k-button-icontext ' href='"
+ Url.Action("Edit", "Member") + "/#=MemberID#'><span class='k-icon k-edit'></span>编辑</a>").Title("编辑").Width(120);
    })
      .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("添加用户").Action("Create", "Member");
        toolbar.Custom()
                        .Text("导出到Excel")
                        .HtmlAttributes(new { id = "export" })
                        .Url(Url.Action("Export", "Member"));

    })
    .Pageable()
    .Sortable()
    .Groupable()
    .Scrollable()
    .Filterable()
    .HtmlAttributes(new { style = "height:500px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(120)
        .Model(model => model.Id(c => c.MemberID))
        .Sort(sort => sort.Add(x => x.AddTime).Descending())
        .Read("Editing_Read", "Member")

    )
)