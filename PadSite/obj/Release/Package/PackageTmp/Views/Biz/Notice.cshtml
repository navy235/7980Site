@{
    ViewBag.Title = "企业公告";
    Layout = "~/Views/Shared/_LayoutPersonal.cshtml";
}
<div class="personal clearfix">
    @Html.Partial("_leftmenu")
    <div class="personal-right">
        <div class="personal-right-body">
            <div class="personal-body-title clearfix">
                <ul class="personal-tab clearfix">
                    <li><a href="@Url.Action("logo")"><span>企业标志</span></a></li>
                    <li><a href="@Url.Action("banner")"><span>企业横幅</span></a></li>
                    <li class="selected"><a href="@Url.Action("notice")"><span>企业公告</span></a></li>
                    <li><a href="@Url.Action("message")"><span>企业留言</span></a></li>
                </ul>
                <a class="k-button pull-right" style="margin-top:-30px" href="@Url.Action("addnotice")">添加公告</a>
            </div>

            <div class="personal-form mt20">
                @(Html.Kendo().Grid<CompanyNoticeListViewModel>()
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.ID)
                            .Sortable(false)
                            .ClientTemplate("<input type='checkbox' name='ID_check' id='#=ID#_check'  class='chkbx' value='#=ID#' />")
                            .HeaderTemplate("<div style='text-align:center'><input type='checkbox' id='checkAll' onclick='Grid.checkAll(this)' title='全选'/></div>")
                            .Width(40).HtmlAttributes(new { style = "text-align:center" });

                        columns.Bound(c => c.Name).Sortable(false);
                        columns.ForeignKey(c => c.Status, new SelectList((List<SelectListItem>)ViewBag.CompanyNoticeStatus, "value", "text")).Width(80);
                        columns.Bound(c => c.AddTime).Format("{0:yyyy-MM-dd}").Width(80).Title("添加时间");

                        columns.Template(@<text></text>)
                .ClientTemplate(@"<a class='k-button k-button-icontext ' href='"
                + Url.Action("editnotice", "biz") + "/#=ID#'><span class='k-icon k-edit'></span>编辑</a>"
                + "<a class='k-button k-button-icontext ' href='javascript:void(0);' onclick='Grid.deleteSingle(this,\"#=ID#\");' ><span class='k-icon k-i-close'></span>删除</a>"
                + "<a class='k-button k-button-icontext ' href='javascript:void(0);' onclick='Grid.notShowSingle(this,\"#=ID#\");' ><span class='k-icon k-i-seek-s'></span>不显示</a>"
                + "<a class='k-button k-button-icontext ' href='javascript:void(0);' onclick='Grid.showSingle(this,\"#=ID#\");' ><span class='k-icon k-i-seek-n'></span>显示</a>"
                )
                .Title("操作")
                .Width(320);
                    })
                    .ToolBar(toolbar =>
                    {
                        toolbar.Custom().Text("添加公告").Action("addnotice", "biz");
                        toolbar.Custom().Text("批量不显示").HtmlAttributes(new { onclick = "Grid.notShowALL(this);", href = "javascript:void(0);" });
                        toolbar.Custom().Text("批量显示").HtmlAttributes(new { onclick = "Grid.showALL(this);", href = "javascript:void(0);" });
                        toolbar.Custom().Text("批量删除").HtmlAttributes(new { onclick = "Grid.deleteAll(this);", href = "javascript:void(0);" });
                    })
                    .Pageable()
                    .Sortable()
                    .Scrollable()
                   .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .Model(model => model.Id(c => c.ID))
                        .Sort(sort => sort.Add(x => x.AddTime).Descending())
                        .Read(read => read.Action("notice_read", "biz"))

                     )
                     .HtmlAttributes(new { style = "height:500px;" })
                    )

                <script type="text/javascript">
                    var Grid = {
                        id: 'Grid',
                        checkAll: function (element) {
                            var self = Grid;
                            var state = $(element).is(':checked');
                            $('[name="ID_check"]').attr('checked', state);
                        },
                        getCheckIds: function () {
                            return $.map($('[name="ID_check"]:checked'), function (item) { return $(item).val() }).join(',');
                        },
                        addSpinner: function (element) {
                            var $spinner = $('<img class="ajax-working" src="@Url.Content("~/Content/images/min-loading.gif")" title="work...." />').appendTo($(element));
                            $(element).addClass('disabled');
                        },
                        removeSpinner: function (element) {
                            $(element).find('.ajax-working').remove();
                            $(element).removeClass('disabled');
                        },
                        excute: function (element, url, Ids) {
                            if ($(element).hasClass('disabled'))
                                return false;
                            var self = Grid;
                            if (Ids) {
                                self.addSpinner(element);
                                $.ajax({
                                    type: 'POST',
                                    url: url,
                                    data: { ids: Ids },
                                    success: function (res) {
                                        if (res.Success) {
                                            Maitonn.JHelper.showMessage(res);
                                            var grid = $("#Grid").data("kendoGrid");
                                            grid.dataSource.read();
                                            grid.refresh();
                                        }
                                    },
                                    complete: function () {
                                        self.removeSpinner(element);
                                    }
                                })
                            } else {
                                alert('请选择要处理的信息');
                                return false;
                            }
                        },
                        notShowALL: function (element) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeNotShow", "biz")';
                            var Ids = self.getCheckIds();
                            self.excute(element, url, Ids);
                        },
                        showALL: function (element) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeShow", "biz")';
                            var Ids = self.getCheckIds();
                            self.excute(element, url, Ids);
                        },
                        deleteAll: function (element) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeDelete", "biz")';
                            var Ids = self.getCheckIds();
                            self.excute(element, url, Ids);
                        },
                        deleteSingle: function (element, id) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeDelete", "biz")';
                            var Ids = id;
                            self.excute(element, url, Ids);
                        },
                        notShowSingle: function (element, id) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeNotShow", "biz")';
                            var Ids = id;
                            self.excute(element, url, Ids);
                        },
                        showSingle: function (element, id) {
                            var self = Grid;
                            var url = '@Url.Action("NoticeShow", "biz")';
                            var Ids = id;
                            self.excute(element, url, Ids);
                        }
                    }
                </script>
            </div>
        </div>
    </div>
</div>
